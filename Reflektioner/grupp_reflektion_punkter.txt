
* the chosen scope of the application under development including priority of features and for whom you are creating value

* your social contract, which means you should create one in the first week

* the success criteria for the team in terms of what you want to achieve with your application

* your acceptance tests, such as how they were performed and with whom

* the design of your application (choice of APIs, architecture patterns etc)

* the behavioural overview of your application (for instance through use cases, interaction diagrams or similar)

* the structural overview of your application (such as class diagrams, domain models or component diagrams)

* your user stories in terms of using a standard pattern, acceptance criteria, task breakdown and effort estimation

* the three KPIs you use for monitoring your progress

* code quality using a tool such as Findbugs
  (1 point if your code includes issues concerning correctness or bad style, 2 points if you have dodgy or performance issues and 3 points if the code is fine),
  only asses the code you have written yourself
  
* the roles you have used within the team

* the agile practices you have used for the current sprint

* the time you have spent on the course (so keep track of your hours so you can describe the current situation)

* the sprint review (either in terms of outcome of the current week's exercise or meeting the product owner)

* best practices for using new tools and technologies (IDEs, version control, scrum boards etc.)

* relation to literature and guest lectures (how do your reflections relate to what others have to say?)
